type Likes @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  postID: ID @index(name: "byPost")
  userID: ID @index(name: "byUser")
}

type Comment @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  body: String!
  postID: ID @index(name: "byPost")
  userID: ID @index(name: "byUser")
}

type Post @model @auth(rules: [{allow: public}, {allow: private}]) {
  id: ID!
  body: String!
  createdAt: AWSDateTime!
  image: String
  userID: ID @index(name: "byUser")
  Comments: [Comment] @hasMany(indexName: "byPost", fields: ["id"])
  Likes: [Comment!] @hasMany(indexName: "byPost", fields: ["id"])
}

type User @model @auth(rules: [{allow: owner, operations: [create, read, update]}, {allow: private, operations: [create, read, update]}, {allow: public, operations: [create, read, update]}]) {
  id: ID!
  firstName: String!
  image: String
  Posts: [Comment!] @hasMany(indexName: "byUser", fields: ["id"])
  Comments: [Comment!] @hasMany(indexName: "byUser", fields: ["id"])
  Likes: [Comment!] @hasMany(indexName: "byUser", fields: ["id"])
  lastName: String!
  sub: ID!
  checked: Boolean!
}
 